name: PR Preview

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - "**"

jobs:
  build-and-preview:
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run dict.py
        run: python dict.py
        continue-on-error: true

      - name: Run main.py
        run: python main.py
        continue-on-error: true

      - name: Verify generated files
        if: success()
        run: |
          if [ ! -d "web-page" ]; then
            echo "Error: web-page directory not found"
            exit 1
          fi
          if [ ! -f "web-page/index.html" ]; then
            echo "Error: index.html not found"
            exit 1
          fi
          echo "Generated files verified successfully"

      - name: Debug web-page contents
        if: success()
        run: |
          echo "Contents of web-page directory:"
          ls -la web-page/
          echo "First few lines of index.html:"
          head -n 5 web-page/index.html

      - name: Checkout gh-pages branch
        if: success()
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages
          fetch-depth: 0

      - name: Create preview directory
        if: success()
        run: |
          mkdir -p gh-pages/pr-preview/pr-${{ github.event.pull_request.number }}
          echo "Created preview directory: pr-preview/pr-${{ github.event.pull_request.number }}"

      - name: Copy files to preview directory
        if: success()
        run: |
          cp -r web-page/* gh-pages/pr-preview/pr-${{ github.event.pull_request.number }}/
          echo "Contents of preview directory:"
          ls -la gh-pages/pr-preview/pr-${{ github.event.pull_request.number }}/

      - name: Commit and push changes
        if: success()
        run: |
          cd gh-pages
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git add pr-preview/
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Add preview for PR #${{ github.event.pull_request.number }} at $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
            git remote set-url origin https://${GITHUB_ACTOR}:${{ secrets.GITHUB_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git
            git push
          fi

      - name: Comment PR
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            try {
              // First, get all existing comments
              const comments = await github.rest.issues.listComments({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number
              });
              
              // Delete all existing preview comments
              for (const comment of comments.data) {
                if (comment.body.includes('**PR Preview**')) {
                  try {
                    await github.rest.issues.deleteComment({
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      comment_id: comment.id
                    });
                  } catch (error) {
                    console.log(`Failed to delete comment ${comment.id}: ${error.message}`);
                  }
                }
              }
              
              // Create new preview comment
              const previewUrl = `https://${context.repo.owner}.github.io/${context.repo.repo}/pr-preview/pr-${context.payload.pull_request.number}/`;
              const branch = context.payload.pull_request.base.ref;
              const timestamp = new Date().toISOString().replace('T', ' ').replace(/\..+/, ' UTC');
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `**PR Preview**\n\n| Preview | Branch | Timestamp |\n|---------|--------|-----------|\n| [Deployed Preview](${previewUrl}) | \`${branch}\` | ${timestamp} |`
              });
            } catch (error) {
              console.error('Failed to update PR comments:', error);
              core.setFailed(error.message);
            }

  cleanup:
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages
          fetch-depth: 0

      - name: Remove preview directory
        run: |
          if [ -d "gh-pages/pr-preview/pr-${{ github.event.pull_request.number }}" ]; then
            rm -rf "gh-pages/pr-preview/pr-${{ github.event.pull_request.number }}"
            cd gh-pages
            git config --global user.email "actions@github.com"
            git config --global user.name "GitHub Actions"
            git add .
            git commit -m "Remove preview for closed PR #${{ github.event.pull_request.number }} at $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
            git remote set-url origin https://${GITHUB_ACTOR}:${{ secrets.GITHUB_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git
            git push
          fi
